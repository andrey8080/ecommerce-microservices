services:
  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ./infrastructure/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./infrastructure/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-user:
    image: postgres:15
    environment:
      POSTGRES_DB: user_service
      POSTGRES_USER: user_service
      POSTGRES_PASSWORD: user_pass
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_service"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-product:
    image: postgres:15
    environment:
      POSTGRES_DB: product_service
      POSTGRES_USER: product_service
      POSTGRES_PASSWORD: product_pass
    volumes:
      - postgres-product-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U product_service"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-order:
    image: postgres:15
    environment:
      POSTGRES_DB: order_service
      POSTGRES_USER: order_service
      POSTGRES_PASSWORD: order_pass
    volumes:
      - postgres-order-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U order_service"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-payment:
    image: postgres:15
    environment:
      POSTGRES_DB: payment_db
      POSTGRES_USER: payment_user
      POSTGRES_PASSWORD: payment_pass
    volumes:
      - postgres-payment-data:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payment_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  cassandra:
    image: cassandra:4.1
    environment:
      CASSANDRA_CLUSTER_NAME: cart-cluster
      CASSANDRA_DC: dc1
      CASSANDRA_RACK: rack1
    volumes:
      - cassandra-data:/var/lib/cassandra
      - ./infrastructure/cassandra/init.cql:/docker-entrypoint-initdb.d/init.cql
    ports:
      - "9042:9042"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build: ./microservices/api-gateway
    ports:
      - "8090:8080"
    depends_on:
      - user-service
      - product-catalog-service
      - cart-service
      - order-service
      - payment-service

  user-service:
    build: ./microservices/user-service
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/user_service
      SPRING_DATASOURCE_USERNAME: user_service
      SPRING_DATASOURCE_PASSWORD: user_pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin123
    depends_on:
      - postgres-user
      - rabbitmq

  product-catalog-service:
    build: ./microservices/product-catalog-service
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-product:5432/product_service
      SPRING_DATASOURCE_USERNAME: product_service
      SPRING_DATASOURCE_PASSWORD: product_pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin123
    depends_on:
      - postgres-product
      - rabbitmq

  cart-service:
    build: ./microservices/cart-service
    ports:
      - "8083:8080"
    environment:
      SPRING_CASSANDRA_CONTACT_POINTS: cassandra
      SPRING_CASSANDRA_PORT: 9042
      SPRING_CASSANDRA_KEYSPACE_NAME: cart_service
      SPRING_CASSANDRA_LOCAL_DATACENTER: datacenter1
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin123
      SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED: false
    depends_on:
      - cassandra
      - rabbitmq

  order-service:
    build: ./microservices/order-service
    ports:
      - "8084:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/order_service
      SPRING_DATASOURCE_USERNAME: order_service
      SPRING_DATASOURCE_PASSWORD: order_pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin123
    depends_on:
      - postgres-order
      - rabbitmq

  payment-service:
    build: ./microservices/payment-service
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-payment:5432/payment_db
      SPRING_DATASOURCE_USERNAME: payment_user
      SPRING_DATASOURCE_PASSWORD: payment_pass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin123
    depends_on:
      - postgres-payment
      - rabbitmq

volumes:
  rabbitmq-data:
  postgres-user-data:
  postgres-product-data:
  postgres-order-data:
  postgres-payment-data:
  cassandra-data:
